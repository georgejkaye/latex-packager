name: Generate and package paper
description: Generate the pdf for the paper and package the source in a zip
jobs:
  build_latex:
    if: "startsWith(github.event.head_commit.message, '[build]')"
    runs-on: ubuntu-latest
    steps:
      - name: Set up repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Package the latex file
        uses: xu-cheng/texlive-action/full@v1
        with:
          run: ./latex-scripts/src/package.sh ${{ github.event.repository.name }} . ./latex-scripts biber
      - name: Zip up the package
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}
      - name: Upload PDF as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}.pdf
          path: main.pdf
      - name: Get short sha
        id: get_sha
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"
      - name: Create a new release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ steps.get_sha.outputs.sha }}
        with:
          draft: false
          prerelease: false
          release_name: ${{ env.sha }}
          tag_name: ${{ env.sha }}
      - name: Upload the paper to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: main.pdf
          asset_name: ${{ github.event.repository.name }}.pdf
          asset_content_type: pdf
      - name: Upload the zip to the release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: zip
